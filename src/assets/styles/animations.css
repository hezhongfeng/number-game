/**
 * 动画效果定义
 */

/* 基础动画 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-10px);
  }
  70% {
    transform: translateY(-5px);
  }
  90% {
    transform: translateY(-3px);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes wiggle {
  0%, 100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(5deg);
  }
  75% {
    transform: rotate(-5deg);
  }
}

@keyframes heartbeat {
  0%, 100% {
    transform: scale(1);
  }
  14% {
    transform: scale(1.3);
  }
  28% {
    transform: scale(1);
  }
  42% {
    transform: scale(1.3);
  }
  70% {
    transform: scale(1);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.5);
  }
}

@keyframes flipInX {
  from {
    transform: perspective(400px) rotateX(90deg);
    opacity: 0;
  }
  40% {
    transform: perspective(400px) rotateX(-20deg);
  }
  60% {
    transform: perspective(400px) rotateX(10deg);
    opacity: 1;
  }
  80% {
    transform: perspective(400px) rotateX(-5deg);
  }
  to {
    transform: perspective(400px) rotateX(0deg);
    opacity: 1;
  }
}

@keyframes rubberBand {
  from {
    transform: scale(1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  to {
    transform: scale(1);
  }
}

@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0) rotate(0deg);
  }
  50% {
    opacity: 1;
    transform: scale(1) rotate(180deg);
  }
}

@keyframes rainbowGlow {
  0% {
    box-shadow: 0 0 20px #ff0000;
  }
  16% {
    box-shadow: 0 0 20px #ff8000;
  }
  33% {
    box-shadow: 0 0 20px #ffff00;
  }
  50% {
    box-shadow: 0 0 20px #00ff00;
  }
  66% {
    box-shadow: 0 0 20px #0080ff;
  }
  83% {
    box-shadow: 0 0 20px #8000ff;
  }
  100% {
    box-shadow: 0 0 20px #ff0080;
  }
}

/* 动画类 */
.animate-fadeIn {
  animation: fadeIn 0.5s ease-out;
}

.animate-fadeOut {
  animation: fadeOut 0.3s ease-in;
}

.animate-slideInUp {
  animation: slideInUp 0.6s ease-out;
}

.animate-slideInDown {
  animation: slideInDown 0.6s ease-out;
}

.animate-slideInLeft {
  animation: slideInLeft 0.6s ease-out;
}

.animate-slideInRight {
  animation: slideInRight 0.6s ease-out;
}

.animate-bounceIn {
  animation: bounceIn 0.8s ease-out;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-shake {
  animation: shake 0.5s ease-in-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-rotate {
  animation: rotate 1s linear infinite;
}

.animate-float {
  animation: float 2s ease-in-out infinite;
}

.animate-wiggle {
  animation: wiggle 0.5s ease-in-out infinite;
}

.animate-heartbeat {
  animation: heartbeat 1.5s ease-in-out infinite;
}

.animate-zoomIn {
  animation: zoomIn 0.5s ease-out;
}

.animate-zoomOut {
  animation: zoomOut 0.3s ease-in;
}

.animate-flipInX {
  animation: flipInX 0.8s ease-out;
}

.animate-rubberBand {
  animation: rubberBand 1s ease-out;
}

.animate-sparkle {
  animation: sparkle 1.5s ease-in-out infinite;
}

.animate-rainbowGlow {
  animation: rainbowGlow 2s linear infinite;
}

/* 延迟动画 */
.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-500 {
  animation-delay: 0.5s;
}

.animate-delay-700 {
  animation-delay: 0.7s;
}

.animate-delay-1000 {
  animation-delay: 1s;
}

/* 动画速度 */
.animate-fast {
  animation-duration: 0.3s;
}

.animate-slow {
  animation-duration: 1s;
}

.animate-slower {
  animation-duration: 2s;
}

/* 悬停动画 */
.hover-bounce:hover {
  animation: bounce 0.6s ease-out;
}

.hover-pulse:hover {
  animation: pulse 0.6s ease-out;
}

.hover-shake:hover {
  animation: shake 0.5s ease-in-out;
}

.hover-wiggle:hover {
  animation: wiggle 0.5s ease-in-out;
}

.hover-heartbeat:hover {
  animation: heartbeat 1s ease-in-out;
}

/* 游戏特定动画 */
.correct-answer {
  animation: bounceIn 0.6s ease-out, rainbowGlow 1s ease-out;
}

.wrong-answer {
  animation: shake 0.5s ease-in-out;
}

.combo-animation {
  animation: pulse 0.8s ease-out, sparkle 1s ease-out;
}

.achievement-unlock {
  animation: zoomIn 0.8s ease-out, rainbowGlow 2s linear;
}

/* 响应式动画控制 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* 暗黑模式适配 */
@media (prefers-color-scheme: dark) {
  .animate-rainbowGlow {
    animation: rainbowGlow 2s linear infinite;
    filter: brightness(0.8);
  }
}
